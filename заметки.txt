Если столбец `fk_zaivitel` в таблице `zaivka` имеет тип данных `integer`, и значение для этого столбца должно быть взято из другой таблицы, то Вам нужно сначала получить это значение из другой таблицы, прежде чем выполнять операцию `INSERT`.

Предположим, что у Вас есть другая таблица `users`, и Вы хотите получить `id` пользователя по его `firstname`. Вот как Вы можете это сделать:

```javascript
app.get("/users/new_zaiv", async (req, res) => {
  const { fk_invert_number, text } = req.body;
  var d = new Date();
  const date_start = `${("0" + d.getDate()).slice(-2)}.${("0" + (Number(d.getMonth()) + 1)).slice(-2)}.${d.getFullYear()}`;
  const status = 3; // Статус, который Вы хотите установить

  // Получаем id пользователя по его firstname
  const userResult = await client.query(
    'SELECT id FROM users WHERE firstname = $1',
    [req.user.firstname]
  );

  if (userResult.rows.length === 0) {
    // Обработка случая, когда пользователь не найден
    return res.status(400).send('User not found');
  }

  const fk_zaivitel = userResult.rows[0].id;

  // Теперь выполняем INSERT с правильным значением fk_zaivitel
  await client.query(
    'INSERT INTO zaivka (fk_invert_number, fk_zaivitel, date_start, status, text) VALUES ($1, $2, $3, $4, $5)',
    [fk_invert_number, fk_zaivitel, date_start, status, text]
  );

  res.redirect('/some-success-page'); // Перенаправляем на страницу успешного создания заявки
});
```

В этом примере мы сначала выполняем запрос к таблице `users` для получения `id` пользователя по его `firstname`. Затем мы используем этот `id` в качестве значения для `fk_zaivitel` при выполнении `INSERT` в таблицу `zaivka`.




        <script>
    document.getElementById('month-select').addEventListener('change', function() {
  fetch(`/users/analitic?month=${this.value}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      response.json();
    })
    .then(data => {
      const ctx = document.getElementById('canvas');
      new Chart(ctx, {
        type: 'doughnut',
        data: {
          labels: ['В ожидании', 'В работе', 'Выполнено'],
          datasets: [{
            label: 'Кол-во заявок',
            data: [70, 20,3],
            backgroundColor: [
              'rgb(255, 99, 132)',
              'rgb(255, 205, 86)',
              'rgb(70, 232, 97)',
            ],
            hoverOffset: 4
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    });
});
        </script>


--Вот так надо, чтобы месяч сам подставлялся

        const month= req.query.month;
  const vupPromise = await client.query(`SELECT COUNT(*) FROM zaivka WHERE status=1 AND extract(month from date_start) = $1`,[month]);
  console.log(req.query.month);
  const rabPromise = await client.query(`SELECT COUNT(*) FROM zaivka WHERE status=2 AND extract(month from date_start) = $1`,[month]);
  const ogidPromise =await client.query(`SELECT COUNT(*) FROM zaivka WHERE status=3 AND extract(month from date_start) = $1`,[month]);




  let ab = new ArrayBuffer(2);
  let dataview = new DataView(ab);
  dataview.setInt8(0,104);
  dataview.setInt8(1,105);


    <script>
            document.querySelector('#elastic').oninput = function(){
                let val = this.value.trim();
                let elasticItems= document.querySelectorAll('. elastic td');
                if(val != ''){
                    elasticItems.forEach(function(elem){
                        if(elem.innerText.search(val)==-1){
                            elem.classList.add('hide');
                        }
                        else{
                            elem.classList.remove('hide');
                        }
                    });
                }
            }
          </script>